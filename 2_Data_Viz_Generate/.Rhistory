setwd("G:/PatentsView/cssip/government-interest/2_Data_Viz_Generate")
source("requirements.R")
script_v <- "3.0"
source("G:/PatentsView/config.R")
dbname=dbname_new
my_db=src_mysql(dbname=dbname_new,host=host,port=port,user=user,password=password)
in.patent_level <- as.data.frame(tbl(my_db, "temp_patent_level_gi_v3"))
in.gov_level <- as.data.frame(tbl(my_db, "temp_gi_level_gi_v3"))
in.all <- as.data.frame(tbl(my_db, "temp_patent_level_all_v3"))
in.assignees.all <- as.data.frame(tbl(my_db, "all_assignees"))
in.patent_level <- in.patent_level %>% filter(year != "NULL" & year >= 1980 & year <= 2017) # filter on years
patents.keep_ids <- in.patent_level$patent_id
#write.csv(patents.keep_ids, file="out\\patents.keep_ids.csv")
# filter on gov_level ids to get the right data
in.gov_level <- in.gov_level %>% filter(patent_id %in% patents.keep_ids)
# merge data two main data files
in.patent_level.merged <- merge(in.patent_level, in.gov_level, by="patent_id")
source("patent_flow_sankey.R")
patent_flow_plot
plotly::orca(patent_flow_plot, file = paste0("data_viz\\Sankey_", script_v, ".pdf"))
library(processx)
plotly::orca(patent_flow_plot, file = paste0("data_viz\\Sankey_", script_v, ".pdf"))
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_", script_v, ".pdf"))
Sys.setenv('MAPBOX_TOKEN' = "pk.eyJ1IjoicGF0ZW5pc2giLCJhIjoiY2pvYWU5aGUxMGR1ejNrbzVvNHR4b2ZnciJ9._AGpzYSoU1wD-DOGnydpxw")
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_", script_v, ".pdf"))
unloadNamespace(processx)
detach(processx)
unload(processx)
install.packages(devtools)
install.packages("devtools")
library(devtools)
unload(processx)
unload("processx")
# Requires: R package
# Modifies: Nothing
# Effects: Installs package
install_pkgs <- function(pkg) {
# Install package if it isn't already
if (!(pkg %in% installed.packages()[, "Package"])){
install.packages(pkg, repos='http://cran.us.r-project.org')
}
library(pkg, character.only = TRUE)
} # end install_pkgs()
# load library packages
pkg_list <- c("trend", "plyr", "scales", "MASS", "reshape", "tools", "plotly", "rjson",
"data.table", "gridExtra", "psych", "dplyr", "dbplyr", "extrafont", "Cairo")#, "processx")
lapply(pkg_list, install_pkgs)
# add ggplot2 after setting device
library(ggplot2)
# Note: These font import steps from the extrafont database only need to be run once
if(nrow(fonttable()) == 0){
print("Importing fonts for the first time - this may take a few minutes")
font_import()
loadfonts(device = "pdf")
}
# Needed only on Windows - run once per R session
# Adjust the path to match your installation of Ghostscript
Sys.setenv(R_GSCMD = "C:/Program Files/gs/gs9.25/bin/gswin64c.exe")
# set color scheme
cyan <- rgb (0, 123, 188,	maxColorValue = 255)
darkRed <- rgb (208, 32, 47, maxColorValue = 255)
darkBlue <- rgb (0, 66, 118	, maxColorValue=255)
darkGreen <- rgb (91, 140, 41, maxColorValue=255)
darkPurple <- rgb (135, 30, 110, maxColorValue=255)
darkGrey <- rgb (51, 54, 58, maxColorValue=255)
lightGrey <- rgb (152, 152, 152, maxColorValue=255)
source("G:/PatentsView/config.R")
dbname=dbname_new
my_db=src_mysql(dbname=dbname_new,host=host,port=port,user=user,password=password)
in.patent_level <- as.data.frame(tbl(my_db, "temp_patent_level_gi_v3"))
in.gov_level <- as.data.frame(tbl(my_db, "temp_gi_level_gi_v3"))
in.all <- as.data.frame(tbl(my_db, "temp_patent_level_all_v3"))
in.assignees.all <- as.data.frame(tbl(my_db, "all_assignees"))
in.patent_level <- in.patent_level %>% filter(year != "NULL" & year >= 1980 & year <= 2017) # filter on years
patents.keep_ids <- in.patent_level$patent_id
#write.csv(patents.keep_ids, file="out\\patents.keep_ids.csv")
# filter on gov_level ids to get the right data
in.gov_level <- in.gov_level %>% filter(patent_id %in% patents.keep_ids)
# merge data two main data files
in.patent_level.merged <- merge(in.patent_level, in.gov_level, by="patent_id")
#write.csv (in.patent_level.merged, file="out\\out.patent_level.merged.csv")
source("patent_flow_sankey.R")
patent_flow_plot
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_", script_v, ".pdf"))
script_v = "3"
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_", script_v, ".pdf"))
library(processx)
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_", script_v, ".pdf"))
process_initialize(orca)
Sys.setenv("C:\Users\npatel\AppData\Roaming\Microsoft\Windows\Start Menu\Programs")
Sys.setenv("C:/Users/npatel/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/orca")
Sys.setenv(path = "C:/Users/npatel/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/orca")
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_", script_v, ".pdf"))
Sys.setenv("C:/Users/npatel/AppData/Local/Programs/orca")
Sys.setenv(path = "C:/Users/npatel/AppData/Local/Programs/orca")
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_", script_v, ".pdf"))
patent_flow_plot
setwd()
getwd()
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_", script_v, ".pdf"))
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_orca", script_v, ".pdf"))
Sys.setenv(path = "C:/Users/npatel/AppData/Local/Programs/orca/orca.exe")
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_orca", script_v, ".pdf"))
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_orca", script_v, ".pdf"), format = pdf)
htmlwidgets::saveWidget(patent_flow_plot, file = paste0("data_viz\\Sankey org name_", script_v, "_", ".html"))
htmlwidgets::saveWidget(patent_flow_plot, file = paste0("data_viz\\Sankey org name_", script_v, "_", ".html"))
Sys.setenv(path = "C:/Users/npatel/AppData/Local/Programs/orca/orca.exe")
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_orca", script_v, ".pdf"), format = pdf)
Sys.setenv(path = "C:/Program Files/Anaconda2/orca_app/orca.exe")
orca(patent_flow_plot, file = paste0("data_viz\\Sankey_orca", script_v, ".pdf"), format = pdf)
