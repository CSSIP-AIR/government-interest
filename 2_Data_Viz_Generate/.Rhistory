setwd("G:/PatentsView/cssip/government-interest/2_Data_Viz_Generate")
source("requirements.R")
script_v <- "3.0"
setwd("G:/PatentsView/")
source("config.r")
dbname=dbname_new
my_db=src_mysql(dbname=dbname,host=host,port=port,user=user,password=password)
in.patent_level <- as.data.frame(tbl(my_db, "temp_patent_level_gi_v3"))
temp <- in.patent_level %>%
filter(year != "NULL" &  year >= 1980 & year <= 2018)
#load inventor gender
in.inventor_has_fem <- as.data.frame(tbl(my_db, "temp_gi_has_female_inv_v3"))
in.gov_level <- as.data.frame(tbl(my_db, "temp_gi_level_gi_v3"))
# dont need to run if the length of set.diff is 0
#set.diff <- setdiff(sort(in.patent_level$patent_id), unique(sort(in.gov_level$patent_id)))
#new.rows <- cbind (set.diff, rep("United States Government"), rep("United States Government"), rep("NULL"), rep("NULL"))
#drop unknown gender and years outside range
gi_inventor_has_fem <- in.inventor_has_fem %>%
inner_join(in.patent_level, by ="patent_id")
gi_inventor_has_fem.sub <- gi_inventor_has_fem %>%
filter(year >= 1980 & year <= 2018) %>%
filter(has_fem_inv==0 | has_fem_inv==1)
gi_inventor_has_fem$year <- as.numeric(gi_inventor_has_fem$year)
gi_inventor_has_fem$has_fem_inv <- as.numeric(gi_inventor_has_fem$has_fem_inv)
#organize the data to get the percentage of patents in each year with atleast one woman **
grouped_gi_inventor_has_fem <- gi_inventor_has_fem.sub %>%
group_by(year, has_fem_inv) %>%
summarise(count_inv = n())
total_count_gi_inventor_has_fem <- gi_inventor_has_fem %>%
group_by(year) %>%
summarise(total = length(year))
for_graph <- grouped_gi_inventor_has_fem %>%
inner_join(total_count_gi_inventor_has_fem, by = 'year') %>%
mutate(PercentageofPatents = count_inv/total)
for_graph$has_fem_inv <- as.character(for_graph$has_fem_inv)
gi_teams_female_inv <- ggplot(for_graph) +
geom_line(aes(x=year,y=PercentageofPatents,color=has_fem_inv,linetype=has_fem_inv), size = 1.5) +
ylab(label="Percentage of Patents") +  xlab("Year") +
scale_colour_manual(values=c(cyan, darkPurple, darkGreen), labels=c("All Male Inventors", "At Least One Woman",  "All Unknown")) +
scale_linetype_manual(values=c("solid", "dashed", "twodash"), labels=c("All Male Inventors",  "At Least One Woman", "All Unknown")) +
scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015)) +
scale_y_continuous(labels = scales::percent) +
expand_limits(y = 0) +
theme_set(theme_gray(base_size = 16)) +
theme(legend.direction = 'horizontal',
legend.position = 'bottom',
legend.key = element_blank(),
legend.key.width = unit(3, 'lines'),
legend.title=element_blank(),
text=element_text(size=16,  family="Cambria")
)
gi_teams_female_inv
setwd("G:/PatentsView/cssip/government-interest/2_Data_Viz_Generate")
Sys.setenv(R_GSCMD = "C:/Program Files/gs/gs9.25/bin/gswin64c.exe")
ggsave(paste0("data_viz\\image_no_embed", script_v, ".pdf"), plot=gi_teams_female_inv)
setwd("G:/PatentsView/cssip/government-interest/2_Data_Viz_Generate")
ggsave(paste0("data_viz\\image_no_embed", script_v, ".pdf"), plot=gi_teams_female_inv)
gi_teams_female_inv
getwd()
setwd("G:/PatentsView/")
ggsave(paste0("image_no_embed", script_v, ".pdf"), plot=gi_teams_female_inv)
ggsave(paste0("image_embed", script_v, ".pdf"), plot=gi_teams_female_inv)
embed_fonts("image_no_embed_v3.pdf", outfile = "image_embed_v3.pdf")
embed_fonts("image_no_embedv3.pdf", outfile = "image_embed_v3.pdf")
embed_fonts("image_no_embed3.0.pdf", outfile = "image_embed_v3.pdf")
loadfonts(device = "postscript")
loadfonts(device = "pdf")
ggsave(paste0("image_no_embed", script_v, ".pdf"), plot=gi_teams_female_inv)
embed_fonts("image_no_embed3.0.pdf", outfile = "image_embed_v3.pdf")
embedFonts(file = "image_no_embed3.0.pdf", outfile = "image_embed_v3.pdf")
gi_teams_female_inv <- ggplot(for_graph) +
geom_line(aes(x=year,y=PercentageofPatents,color=has_fem_inv,linetype=has_fem_inv), size = 1.5) +
ylab(label="Percentage of Patents") +  xlab("Year") +
scale_colour_manual(values=c(cyan, darkPurple, darkGreen), labels=c("All Male Inventors", "At Least One Woman",  "All Unknown")) +
scale_linetype_manual(values=c("solid", "dashed", "twodash"), labels=c("All Male Inventors",  "At Least One Woman", "All Unknown")) +
scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015)) +
scale_y_continuous(labels = scales::percent) +
expand_limits(y = 0) +
theme_set(theme_gray(base_size = 16)) +
theme(legend.direction = 'horizontal',
legend.position = 'bottom',
legend.key = element_blank(),
legend.key.width = unit(3, 'lines'),
legend.title=element_blank(),
text=element_text(size=16,  family="Cambria")
)
gi_teams_female_inv
ggsave(paste0("image_no_embed", script_v, ".pdf"), plot=gi_teams_female_inv)
warnings()
loadfonts(device = "pdf")
gi_teams_female_inv <- ggplot(for_graph) +
geom_line(aes(x=year,y=PercentageofPatents,color=has_fem_inv,linetype=has_fem_inv), size = 1.5) +
ylab(label="Percentage of Patents") +  xlab("Year") +
scale_colour_manual(values=c(cyan, darkPurple, darkGreen), labels=c("All Male Inventors", "At Least One Woman",  "All Unknown")) +
scale_linetype_manual(values=c("solid", "dashed", "twodash"), labels=c("All Male Inventors",  "At Least One Woman", "All Unknown")) +
scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015)) +
scale_y_continuous(labels = scales::percent) +
expand_limits(y = 0) +
theme_set(theme_gray(base_size = 16)) +
theme(legend.direction = 'horizontal',
legend.position = 'bottom',
legend.key = element_blank(),
legend.key.width = unit(3, 'lines'),
legend.title=element_blank(),
text=element_text(size=16,  family="Cambria")
)
gi_teams_female_inv
warnings()
gi_teams_female_inv <- ggplot(for_graph) +
geom_line(aes(x=year,y=PercentageofPatents,color=has_fem_inv,linetype=has_fem_inv), size = 1.5) +
ylab(label="Percentage of Patents") +  xlab("Year") +
scale_colour_manual(values=c(cyan, darkPurple, darkGreen), labels=c("All Male Inventors", "At Least One Woman",  "All Unknown")) +
scale_linetype_manual(values=c("solid", "dashed", "twodash"), labels=c("All Male Inventors",  "At Least One Woman", "All Unknown")) +
scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015)) +
scale_y_continuous(labels = scales::percent) +
expand_limits(y = 0) +
theme_set(theme_gray(base_size = 16)) +
theme(legend.direction = 'horizontal',
legend.position = 'bottom',
legend.key = element_blank(),
legend.key.width = unit(3, 'lines'),
legend.title=element_blank(),
text=element_text(size=10,  family="Cambria")
)
gi_teams_female_inv
ggsave(paste0("image_no_embed", script_v, ".pdf"), plot=gi_teams_female_inv)
warnings()
embedFonts(file = "image_no_embed3.0.pdf", outfile = "image_embed_v3.pdf")
font.paths()
embed_fonts(file = "image_no_embed3.0.pdf", outfile = "image_embed_v3.pdf")
source("requirements.R")
script_v <- "3.0"
source("G:/PatentsView/config.r")
my_db=src_mysql(dbname=dbname_new,host=host,port=port,user=user,password=password)
##################################################f#######################################################
in.patent_level <- as.data.frame(tbl(my_db, "temp_patent_level_gi_v3"))
in.patent_level <- in.patent_level %>% filter(year != "NULL" & year >= 1980 & year <= 2017) # filter on years
patents.keep_ids <- in.patent_level$patent_id
getwd()
write.csv(patents.keep_ids, file="patents.keep_ids_20180528.csv")
my_db=src_mysql(dbname=dbname_old,host=host,port=port,user=user,password=password)
#read from db
in.patent_level <- as.data.frame(tbl(my_db, "temp_patent_level_gi"))
in.patent_level <- in.patent_level %>% filter(year != "NULL" & year >= 1980 & year <= 2017) # filter on years
patents.keep_ids <- in.patent_level$patent_id
write.csv(patents.keep_ids, file="patents.keep_ids_20171226.csv")
patents.keep_ids
pv_old <- read.csv("patents.keep_ids_20180528.csv")
pv_new <- read.csv("patents.keep_ids_20171226.csv")
colnames(pv_new)
View(pv_new)
old_ids <- pv_old$x
new_ids <- pv_new$X
old_ids <- pv_old$x
new_ids <- pv_new$x
total_ids <- c(old_ids, new_ids)
123464+125249
total_ids %>% head()
old_ids <- pv_old$x
new_ids <- pv_new$x
total_ids <- c(old_ids, new_ids)
old_ids <- pv_old$x
new_ids <- pv_new$x
total_ids <- c(old_ids, new_ids)
total_ids
c(old_ids, new_ids)
old_ids
new_ids
total_ids <- list(old_ids, new_ids)
old_ids[[1]]
old_ids[1]
typeof(old_ids)
length(old_ids)
total_ids <- c(old_ids, new_ids)
old_ids[[2]]
length(old_ids[[2]])
et(total_ids)
set(total_ids)
unique(total_ids)
pv_new<- read.csv("patents.keep_ids_20180528.csv")
pv_old <- read.csv("patents.keep_ids_20171226.csv")
old_ids <- pv_old$x
new_ids <- pv_new$x
uniq_list <- c()
dups_list <- c()
for(id %in% old_ids ){
if(id %in% new_ids ){
dups_list = c(dups_list,id)
}
else{
uniq_list = c(uniq_list)
}
}
for(id %in% old_ids ){
if(id %in% new_ids ){
dups_list = c(dups_list,id)
}
else{
uniq_list = c(uniq_list)
}
}
for(id %in% old_ids ){
if(id %in% new_ids ){
dups_list = c(dups_list,id)
}else{
uniq_list = c(uniq_list)
}
}
dups_list <- c()
for(id %in% old_ids){
if(id %in% new_ids){
dups_list = c(dups_list,id)
}else{
uniq_list = c(uniq_list, id)
}
}
dups_list <- c()
for(id in old_ids){
if(id in new_ids){
dups_list = c(dups_list,id)
}else{
uniq_list = c(uniq_list, id)
}
}
uniq_list <- c()
dups_list <- c()
for(id in old_ids){
if(id in new_ids){
dups_list = c(dups_list,id)
}else{
uniq_list = c(uniq_list, id)
}
for(id in old_ids){
if(id in new_ids){
dups_list = c(dups_list,id)
}else{
uniq_list = c(uniq_list, id)}
for(id in old_ids){
if(id in new_ids){
dups_list = c(dups_list,id)
}
for(id in old_ids){
if(id %in% new_ids){
dups_list = c(dups_list,id)
}
uniq_list = c(uniq_list, id)
}
total_ids <- c(old_ids[1], new_ids[1])
total_ids <- c(pv_old$x, pv_new$x)
total_list <- c()
for(id in old_ids){
total_list = c(total_list, id)
}
for(id in new_ids){
total_list = c(total_list, id)
}
set_list <- as.set(total_list)
install.packages("set")
library(set)
total_list %>% distinct()
tot_df <- as.data.frame(total_list)
tot_df %>% distinct()
distinct_tot <- tot_df %>% distinct()
nrow(distinct_tot)
distinct_tot <- unique(total_ids)
stat_unique(remove_duplicates)
install.packages("sets")
library(sets)
set_diff <- setdiff(new_ids, old_ids)
set_diff
write.csv(set_diff, "new_patent_ids.csv")
set_diff <- setdiff(new_ids, old_ids)
names("patent_ids")
write.csv(set_diff, "new_patent_ids.csv")
set_diff <- setdiff(new_ids, old_ids)
names(set_diff) <- c("patent_ids")
write.csv(set_diff, "new_patent_ids.csv")
write.csv(set_diff, "new_patent_ids.csv", row.names = FALSE)
write.csv(set_diff, "new_patent_ids.csv", row.names = FALSE)
125249+678
123465=678
123465=678
123465+678
125249-123465
my_db_new=src_mysql(dbname=dbname_new,host=host,port=port,user=user,password=password)
my_db_old=src_mysql(dbname=dbname_old,host=host,port=port,user=user,password=password)
in.patent_level_new <- as.data.frame(tbl(my_db_new, "temp_patent_level_gi_v3"))
in.patent_level_old <- as.data.frame(tbl(my_db_old, "temp_patent_level_gi"))
in.patent_level <- in.patent_level %>% filter(year != "NULL" & year >= 1980 & year <= 2017) # filter on years
in.patent_level_new <- in.patent_level_new %>% filter(year != "NULL" & year >= 1980 & year <= 2017)
in.patent_level_old <- in.patent_level_old %>% filter(year != "NULL" & year >= 1980 & year <= 2017)
my_db_new=src_mysql(dbname=dbname_new,host=host,port=port,user=user,password=password)
my_db_old=src_mysql(dbname=dbname_old,host=host,port=port,user=user,password=password)
in.patent_level_new <- as.data.frame(tbl(my_db_new, "temp_patent_level_gi_v3"))
in.patent_level_old <- as.data.frame(tbl(my_db_old, "temp_patent_level_gi"))
in.patent_level_new <- in.patent_level_new %>% filter(year != "NULL" & year >= 1980 & year <= 2017)
in.patent_level_old <- in.patent_level_old %>% filter(year != "NULL" & year >= 1980 & year <= 2017)
#read from db
in.patent_level_new <- as.data.frame(tbl(my_db_new, "temp_patent_level_gi_v3"))
in.patent_level_old <- as.data.frame(tbl(my_db_old, "temp_patent_level_gi"))
in.patent_level_new <- in.patent_level_new %>% filter(year != "NULL" & year >= 1980 & year <= 2017)
in.patent_level_old <- in.patent_level_old %>% filter(year != "NULL" & year >= 1980 & year <= 2017)
source("G:/PatentsView/config.r")
setwd("G:/PatentsView/cssip/government-interest/2_Data_Viz_Generate")
source("requirements.R")
script_v <- "3.0"
my_db_new=src_mysql(dbname=dbname_new,host=host,port=port,user=user,password=password)
my_db_old=src_mysql(dbname=dbname_old,host=host,port=port,user=user,password=password)
in.patent_level_new <- as.data.frame(tbl(my_db_new, "temp_patent_level_gi_v3"))
in.patent_level_old <- as.data.frame(tbl(my_db_old, "temp_patent_level_gi"))
in.patent_level_new <- in.patent_level_new %>% filter(year != "NULL" & year >= 1980 & year <= 2017)
in.patent_level <- as.data.frame(tbl(my_db_new, "temp_patent_level_gi_v3"))
in.patent_level <- in.patent_level %>% filter(year != "NULL" & year >= 1980 & year <= 2017) # filter on years
rs
in.patent_level_new <- in.patent_level_new %>% filter(year != NULL & year >= 1980 & year <= 2017)
in.patent_level_old <- in.patent_level_old %>% filter(year != NULL & year >= 1980 & year <= 2017)
in.patent_level_new
in.patent_level_new <- in.patent_level_new %>% filter(year != "NULL" & year >= 1980 & year <= 2017)
in.patent_level_old <- in.patent_level_old %>% filter(year != "NULL" & year >= 1980 & year <= 2017)
setwd("G:/PatentsView/cssip/government-interest/2_Data_Viz_Generate")
source("requirements.R")
script_v <- "3.0"
in.patent_level_new <- as.data.frame(tbl(my_db_new, "temp_patent_level_gi_v3"))
in.patent_level_old <- as.data.frame(tbl(my_db_old, "temp_patent_level_gi"))
in.patent_level_new <- in.patent_level_new %>% filter(year != "NULL" & year >= 1980 & year <= 2017)
